//
//  APObjectRemoteConfig.h
//  AnyPresence SDK
//

/*!
 @header APObjectRemoteConfig
 @abstract APObjectRemoteConfig class
 */

#import <Foundation/Foundation.h>
#import "APObject.h"

/*!
 @const kAPObjectRemoteConfigExceptionNoProperties
 @abstract Thrown when default config is unable to guess remoteIDProperty.
 */
extern NSString * const kAPObjectRemoteConfigExceptionNoProperties;

/*!
 @class APObjectRemoteConfig
 @abstract Contains configuration options for APObject+Remote capabilities.
 @discussion Use APObjectRemoteConfig to configure  is intended to be used with data model objects.
 All public properties are passed on to the remote server.
 Make sure to set base URL for the remote API with @link //apple_ref/occ/intfm/APObject/setBaseURL: @/link prior to use.
 Use @link //apple_ref/occ/cat/APObject(RemoteConfig) @/link to set the primary key property.
 */
@interface APObjectRemoteConfig : NSObject

/*!
 @var remoteIDProperty
 @abstract Sets property for be used as primary key.
 @discussion The value of this property should uniquely identify the current object on the server.
 It may be generated by the server in which case it is replaced when the object is persisted.
 */
@property (nonatomic, strong) NSString * remoteIDProperty;

/*!
 @method defaultConfigForClass:
 @abstract Returns default APObjectRemoteConfig instance for class.
 @param klass Class to request APObjectRemoteConfig for.
 @discussion The default config tries to guess configuration options.
 */
+ (APObjectRemoteConfig *)defaultConfigForClass:(Class)klass;

@end
